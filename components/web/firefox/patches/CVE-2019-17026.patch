# HG changeset patch
# User Jan de Mooij <jdemooij@mozilla.com>
# Date 0 0
# Node ID 386e0f597c08198ce1fe86398f28c0789eb73812
# Parent  e0affaaabbfe93b6fe5e3857fc885889333e4f1b
Bug 1607443 - Fix some alias sets. r=tcampbell, a=lizzard

Differential Revision: https://phabricator.services.mozilla.com/D58956

--- firefox-66.0.5/js/src/jit/AliasAnalysis.cpp	2019-05-07 15:53:03.000000000 +0000
+++ firefox-66.0.5/js/src/jit/AliasAnalysis.cpp.new	2020-01-11 10:35:17.543508818 +0000
@@ -120,8 +120,6 @@ static inline const MDefinition* GetObje
     case MDefinition::Opcode::SetInitializedLength:
     case MDefinition::Opcode::ArrayLength:
     case MDefinition::Opcode::SetArrayLength:
-    case MDefinition::Opcode::StoreElementHole:
-    case MDefinition::Opcode::FallibleStoreElement:
     case MDefinition::Opcode::TypedObjectDescr:
     case MDefinition::Opcode::Slots:
     case MDefinition::Opcode::Elements:
@@ -182,6 +180,8 @@ static inline const MDefinition* GetObje
     case MDefinition::Opcode::WasmStoreGlobalCell:
     case MDefinition::Opcode::ArrayJoin:
     case MDefinition::Opcode::ArraySlice:
+    case MDefinition::Opcode::StoreElementHole:
+    case MDefinition::Opcode::FallibleStoreElement:
       return nullptr;
     default:
 #ifdef DEBUG
--- firefox-66.0.5/js/src/jit/MIR.h	2019-05-07 15:53:02.000000000 +0000
+++ firefox-66.0.5/js/src/jit/MIR.h.new	2020-01-11 10:36:30.789570491 +0000
@@ -7656,12 +7656,6 @@ class MStoreElementHole
   TRIVIAL_NEW_WRAPPERS
   NAMED_OPERANDS((0, object), (1, elements), (2, index), (3, value))
 
-  AliasSet getAliasSet() const override {
-    // StoreElementHole can update the initialized length, the array length
-    // or reallocate obj->elements.
-    return AliasSet::Store(AliasSet::ObjectFields | AliasSet::Element);
-  }
-
   ALLOW_CLONE(MStoreElementHole)
 };
 
@@ -7688,9 +7682,6 @@ class MFallibleStoreElement
   TRIVIAL_NEW_WRAPPERS
   NAMED_OPERANDS((0, object), (1, elements), (2, index), (3, value))
 
-  AliasSet getAliasSet() const override {
-    return AliasSet::Store(AliasSet::ObjectFields | AliasSet::Element);
-  }
   bool needsHoleCheck() const { return needsHoleCheck_; }
 
   ALLOW_CLONE(MFallibleStoreElement)

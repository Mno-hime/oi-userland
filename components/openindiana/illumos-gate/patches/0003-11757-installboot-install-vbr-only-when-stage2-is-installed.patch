diff --git a/usr/src/cmd/boot/installboot/i386/installboot.c b/usr/src/cmd/boot/installboot/i386/installboot.c
index 3ed4e595775ac9c2e02397aaba5850856f0d92ba..4175ac431087184a23175b388e75a02b126bb889 100644
--- a/usr/src/cmd/boot/installboot/i386/installboot.c
+++ b/usr/src/cmd/boot/installboot/i386/installboot.c
@@ -106,6 +106,7 @@
  */
 
 static bool	write_mbr = false;
+static bool	write_vbr = false;
 static bool	force_mbr = false;
 static bool	force_update = false;
 static bool	do_getinfo = false;
@@ -220,7 +221,7 @@ install_stage1_cb(void *data, struct partlist *plist)
 		perror("write");
 	} else {
 		(void) fprintf(stdout, gettext("stage1 written to "
-		    "%s %d sector 0 (abs %d)\n"),
+		    "%s %d sector 0 (abs %d)\n\n"),
 		    device->devtype == IB_DEV_MBR? "partition" : "slice",
 		    device->stage.id, device->stage.start);
 	}
@@ -260,7 +261,7 @@ install_stage2_cb(void *data, struct partlist *plist)
 		return;
 	}
 	(void) fprintf(stdout, gettext("bootblock written for %s,"
-	    " %d sectors starting at %d (abs %lld)\n"), plist->pl_devname,
+	    " %d sectors starting at %d (abs %lld)\n\n"), plist->pl_devname,
 	    (bblock->buf_size / SECTOR_SIZE) + 1, offset / SECTOR_SIZE, abs);
 }
 
@@ -411,7 +412,7 @@ install_esp_cb(void *data, struct partlist *plist)
 		ret = write_out(fd, bblock->buf, bblock->buf_size, 0);
 		if (ret == BC_SUCCESS) {
 			(void) fprintf(stdout,
-			    gettext("bootblock written to %s\n"), file);
+			    gettext("bootblock written to %s\n\n"), file);
 		} else {
 			(void) fprintf(stdout,
 			    gettext("error while writing %s\n"), file);
@@ -446,14 +447,16 @@ compare_mbr_cb(struct partlist *plist)
 }
 
 /*
- * VBR setup is always done.
+ * VBR setup is done in pair with stage2.
  */
 static bool
 compare_stage1_cb(struct partlist *plist)
 {
-	(void) printf("%s will be written to %s\n", plist->pl_src_name,
-	    plist->pl_devname);
-	return (true);
+	if (write_vbr) {
+		(void) printf("%s will be written to %s\n", plist->pl_src_name,
+		    plist->pl_devname);
+	}
+	return (write_vbr);
 }
 
 /*
@@ -472,12 +475,19 @@ compare_einfo_cb(struct partlist *plist)
 		return (false);	/* source is missing, cannot update */
 
 	bblock = plist->pl_stage;
-	if (bblock == NULL || bblock->extra == NULL || bblock->extra_size == 0)
+	if (bblock == NULL ||
+	    bblock->extra == NULL ||
+	    bblock->extra_size == 0) {
+		if (plist->pl_type == IB_BBLK_STAGE2)
+			write_vbr = true;
 		return (true);
+	}
 
 	einfo = find_einfo(bblock->extra, bblock->extra_size);
 	if (einfo == NULL) {
 		BOOT_DEBUG("No extended information available on disk\n");
+		if (plist->pl_type == IB_BBLK_STAGE2)
+			write_vbr = true;
 		return (true);
 	}
 
@@ -503,12 +513,16 @@ compare_einfo_cb(struct partlist *plist)
 		    gettext("WARNING: target device %s has a "
 		    "versioned bootblock that is going to be overwritten by a "
 		    "non versioned one\n"), plist->pl_devname);
+		if (plist->pl_type == IB_BBLK_STAGE2)
+			write_vbr = true;
 		return (true);
 	}
 
 	if (force_update) {
 		BOOT_DEBUG("Forcing update of %s bootblock\n",
 		    plist->pl_devname);
+		if (plist->pl_type == IB_BBLK_STAGE2)
+			write_vbr = true;
 		return (true);
 	}
 
@@ -519,13 +533,15 @@ compare_einfo_cb(struct partlist *plist)
 
 	rv = einfo_should_update(einfo, &bblock_hs, update_str);
 	if (rv == false) {
-		(void) fprintf(stderr, gettext("\nBootblock version installed "
+		(void) fprintf(stderr, gettext("Bootblock version installed "
 		    "on %s is more recent or identical to\n%s\n"
-		    "Use -F to override or install without the -u option.\n"),
+		    "Use -F to override or install without the -u option.\n\n"),
 		    plist->pl_devname, plist->pl_src_name);
 	} else {
 		(void) printf("%s is newer than one in %s\n",
 		    plist->pl_src_name, plist->pl_devname);
+		if (plist->pl_type == IB_BBLK_STAGE2)
+			write_vbr = true;
 	}
 	return (rv);
 }
@@ -2137,8 +2153,6 @@ handle_install(char *progname, int argc, char **argv)
 			    pl->pl_cb.compare(pl)) {
 				if (pl->pl_cb.install != NULL)
 					pl->pl_cb.install(&data, pl);
-			} else {
-				printf("\n");
 			}
 			STAILQ_REMOVE(data.plist, pl, partlist, pl_next);
 			partlist_free(pl);
@@ -2275,6 +2289,7 @@ handle_mirror(char *progname, int argc, char **argv)
 		goto cleanup_src;
 	}
 
+	write_vbr = true;
 	write_mbr = true;
 	force_mbr = true;
 
